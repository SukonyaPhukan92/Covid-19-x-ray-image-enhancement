# -*- coding: utf-8 -*-
"""X-ray image enhancement using Histogram Equilization .ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1aitw2K8qAijhPZzzeykY08gCVPhASZ19
"""

import cv2
import numpy as np
import matplotlib.pyplot as plt
from google.colab.patches import cv2_imshow
from PIL import Image 
from PIL import ImageFilter 
import os

def main():
  inPath ="/content/drive/MyDrive/Internship NIT Durgapur/COVID-19"
  outPath ="/content/drive/MyDrive/Internship NIT Durgapur/enhanced"
  for imagePath in os.listdir(inPath):
    inputPath=os.path.join(inPath, imagePath)
    img=Image.open(inputPath)
    numpy_image = np.array(img)
    opencvImage = cv2.cvtColor(numpy_image, cv2.COLOR_RGBA2BGRA)
    #imkj=cv2.imread('img.png')
    gray_img=cv2.cvtColor(opencvImage,cv2.COLOR_BGR2GRAY)
    hist=cv2.calcHist(gray_img,[0],None,[256],[0,256])
    plt.subplot(121)
    plt.title("HISTOGRAM")
    plt.xlabel('bins')
    plt.ylabel("No of pixels")
    plt.plot(hist)
    #plt.show()
    gray_img_eqhist=cv2.equalizeHist(gray_img)
    hist=cv2.calcHist(gray_img_eqhist,[0],None,[256],[0,256])
    plt.subplot(121)
    plt.plot(hist)
    #plt.show()
    clahe=cv2.createCLAHE(clipLimit=20)
    gray_img_clahe=clahe.apply(gray_img_eqhist)
    #cv2_imshow(gray_img_clahe)
    cv2.waitKey(0)
    cv2.destroyAllWindows()
    fullOutPath=os.path.join(outPath,'enhanced_'+imagePath)
    im_pil = Image.fromarray(gray_img_clahe)
    im_pil.save(fullOutPath)
    print(fullOutPath)
if __name__=='__main__':
  main()